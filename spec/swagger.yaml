swagger: '2.0'

info:
  description: 'Restful API for [Odoo](https://www.odoo.com).'
  version: '2.0.0'
  title: 'MuK REST API'
  contact:
    email: 'support@mukit.at'
    url: 'https://www.mukit.at'
  license:
    name: 'Odoo Proprietary License v1.0'
    url: 'https://www.odoo.com/documentation/user/11.0/legal/licenses/licenses.html#licenses'
  x-logo:
    url: 'https://mukit.at/theme_crafito/static/src/img/logo.png'
    
schemes:
  - 'http'
  - 'https'
host: 'demo.mukit.at'

externalDocs:
  description: 'Documentation and Examples'
  url: 'https://github.com/muk-it/muk_docs/tree/11.0/muk_rest'

tags:
  - name: 'API'
    description: 'General API operations'
  - name: 'Authentication'
    description: 'Operations to create and refresh a token'
  - name: 'Read/Search'
    description: 'Operations to read data from the system'
  - name: 'Create/Write/Delete'
    description: 'Operations to manipulate data from the system'
  - name: 'Generic Request'
    description: 'A generic request to call any method in the system'
  - name: 'Reports and Files'
    description: 'Operations to generate reports or download files'
  - name: 'Database'
    description: 'Operations interact with the database'
  - name: 'Backup/Restore'
    description: 'Operations backup or restore the database'

paths:
  /api:
    get:
      tags:
        - "API"
      summary: 'Version'
      description: 'Request system information'
      operationId: vesion
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: 'System information'
          schema:
            properties:
              api_version:
                type: integer
                format: int32
              server_serie:
                type: string
              server_version:
                type: string
              server_version_info:
                type: array
                items:
                  type: integer
                  format: int32
  /api/authenticate:
    post:
      tags:
        - "Authentication"
      summary: 'Authenticate'
      description: 'Generates the API token based on the given login informations.'
      produces:
        - application/json
      parameters:
        - name: password
          in: query
          required: true
          type: string
          x-example: demo
        - name: login
          in: query
          required: true
          type: string
          x-example: demo
        - name: db
          in: query
          required: true
          type: string
          x-example: demo
      responses:
        '200':
          description: Token
          schema:
            properties:
              token:
                type: string
                description: "Token"
                example: "tFss-VxvSVm58NE-z7gVdg"
        '400':
          description: Arguments missing 
          schema:
            properties:
              error:
                type: string
                description: "Error"
                example: "arguments_missing ['password']"
        '401':
          description: Invalid login
          schema:
            properties:
              error:
                type: string
                description: "Error"
                example: "invalid_login"
        '404':
          description: Invalid database
          schema:
            properties:
              error:
                type: string
                description: "Error"
                example: "invalid_db"
        '500':
          description: REST API is not supported
          schema:
            properties:
              error:
                type: string 
                description: "Error"
                example: "rest_api_not_supported"
